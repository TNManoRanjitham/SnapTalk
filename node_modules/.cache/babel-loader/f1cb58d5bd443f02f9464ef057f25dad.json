{"ast":null,"code":"var _jsxFileName = \"/Users/thirumano/Documents/SnapTalk/frontend/src/contexts/SocketContext.tsx\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3000'); // Backend server URL\n\nexport const SocketContext = createContext(undefined);\nexport const SocketProvider = ({\n  children\n}) => {\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      socket.off('message');\n    };\n  }, []);\n  const sendMessage = (message, sender) => {\n    socket.emit('message', {\n      content: message,\n      sender\n    });\n  };\n  return /*#__PURE__*/React.createElement(SocketContext.Provider, {\n    value: {\n      sendMessage,\n      messages\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","io","socket","SocketContext","undefined","SocketProvider","children","messages","setMessages","on","message","prevMessages","off","sendMessage","sender","emit","content","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/thirumano/Documents/SnapTalk/frontend/src/contexts/SocketContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3000'); // Backend server URL\n\ninterface SocketContextProps {\n  sendMessage: (message: string, sender: string) => void;\n  messages: string[];\n}\ninterface SocketProviderProps {\n  children: ReactNode;\n}\n\nexport const SocketContext = createContext<SocketContextProps | undefined>(undefined);\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({ children }) => {\n  const [messages, setMessages] = useState<string[]>([]);\n\n  useEffect(() => {\n    socket.on('message', (message: string) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    return () => {\n      socket.off('message');\n    };\n  }, []);\n\n  const sendMessage = (message: string, sender: string) => {\n    socket.emit('message', { content: message, sender });\n  };\n\n  return (\n    <SocketContext.Provider value={{ sendMessage, messages }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAC5E,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAU5C,OAAO,MAAME,aAAa,GAAGL,aAAa,CAAiCM,SAAS,CAAC;AAErF,OAAO,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC7E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAW,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdE,MAAM,CAACO,EAAE,CAAC,SAAS,EAAGC,OAAe,IAAK;MACxCF,WAAW,CAAEG,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEF,OAAO,MAAM;MACXR,MAAM,CAACU,GAAG,CAAC,SAAS,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAACH,OAAe,EAAEI,MAAc,KAAK;IACvDZ,MAAM,CAACa,IAAI,CAAC,SAAS,EAAE;MAAEC,OAAO,EAAEN,OAAO;MAAEI;IAAO,CAAC,CAAC;EACtD,CAAC;EAED,oBACEjB,KAAA,CAAAoB,aAAA,CAACd,aAAa,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEN,WAAW;MAAEN;IAAS,CAAE;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtDnB,QACqB,CAAC;AAE7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}