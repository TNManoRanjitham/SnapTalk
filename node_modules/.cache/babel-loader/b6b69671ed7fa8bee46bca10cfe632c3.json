{"ast":null,"code":"var _jsxFileName = \"/Users/thirumano/Documents/SnapTalk/frontend/src/contexts/SocketContext.tsx\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nconst currentUserId = 'some-unique-user-id';\nconst socket = io('http://localhost:3000', {\n  query: {\n    userId: currentUserId\n  }\n}); // Backend server URL\n\nexport const SocketContext = createContext(undefined);\nexport const SocketProvider = ({\n  children\n}) => {\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on('receive_message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      socket.off('receive_message');\n    };\n  }, []);\n  const sendMessage = (message, sender, recipient) => {\n    socket.emit('send_message', {\n      content: message,\n      sender,\n      recipient\n    });\n  };\n  return /*#__PURE__*/React.createElement(SocketContext.Provider, {\n    value: {\n      sendMessage,\n      messages\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","io","currentUserId","socket","query","userId","SocketContext","undefined","SocketProvider","children","messages","setMessages","on","message","prevMessages","off","sendMessage","sender","recipient","emit","content","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/thirumano/Documents/SnapTalk/frontend/src/contexts/SocketContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from 'react';\nimport io from 'socket.io-client';\nimport { useLocation } from 'react-router-dom';\n\nconst currentUserId = 'some-unique-user-id'; \nconst socket = io('http://localhost:3000', { query: { userId: currentUserId } }); // Backend server URL\n\ninterface SocketContextProps {\n  sendMessage: (message: string, sender: string, recipient: string) => void;\n  messages: string[];\n}\ninterface SocketProviderProps {\n  children: ReactNode;\n}\n\nexport const SocketContext = createContext<SocketContextProps | undefined>(undefined);\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({ children }) => {\n  const [messages, setMessages] = useState<string[]>([]);\n\n  useEffect(() => {\n    socket.on('receive_message', (message: string) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    return () => {\n      socket.off('receive_message');\n    };\n  }, []);\n\n  const sendMessage = (message: string, sender: string, recipient: string) => {\n    socket.emit('send_message', { content: message, sender, recipient });\n  };\n\n  return (\n    <SocketContext.Provider value={{ sendMessage, messages }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAC5E,OAAOC,EAAE,MAAM,kBAAkB;AAGjC,MAAMC,aAAa,GAAG,qBAAqB;AAC3C,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAuB,EAAE;EAAEG,KAAK,EAAE;IAAEC,MAAM,EAAEH;EAAc;AAAE,CAAC,CAAC,CAAC,CAAC;;AAUlF,OAAO,MAAMI,aAAa,GAAGR,aAAa,CAAiCS,SAAS,CAAC;AAErF,OAAO,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC7E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAW,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdG,MAAM,CAACS,EAAE,CAAC,iBAAiB,EAAGC,OAAe,IAAK;MAChDF,WAAW,CAAEG,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEF,OAAO,MAAM;MACXV,MAAM,CAACY,GAAG,CAAC,iBAAiB,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAACH,OAAe,EAAEI,MAAc,EAAEC,SAAiB,KAAK;IAC1Ef,MAAM,CAACgB,IAAI,CAAC,cAAc,EAAE;MAAEC,OAAO,EAAEP,OAAO;MAAEI,MAAM;MAAEC;IAAU,CAAC,CAAC;EACtE,CAAC;EAED,oBACErB,KAAA,CAAAwB,aAAA,CAACf,aAAa,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEP,WAAW;MAAEN;IAAS,CAAE;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtDpB,QACqB,CAAC;AAE7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}